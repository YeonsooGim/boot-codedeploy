
name: Deploy to Amazon EC2

on:
  push:
    branches: [ "master" ]
    
permissions:
    id-token: write # required!
    contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'
        
    - name: Build with Maven
      run: mvn install -f boot/pom.xml 

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: myapp
        path: boot/target/boot-0.0.1-SNAPSHOT.war

    - name: Download artifact on deploy runner
      uses: actions/download-artifact@v2
      with:
        name: myapp
        
    # - name: Run aws ssm send-command
    #   uses: nohmad/aws-ssm-send-command-action@master
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ap-northeast-2
    #     targets: |
    #       [{"Key":"InstanceIds","Values":[${{ secrets.INSTANCE_ID }}]}]
    #     document-name: AWS-RunShellScript
    #     parameters: |
    #       {"commands":["sudo systemctl stop tomcat", "sudo rm -rf /opt/tomcat/tomacat-10/webapps/boot.war", "sudo cp boot/target/boot-0.0.1-SNAPSHOT.war.war /opt/tomcat/tomacat-10/webapps/boot.war", "sudo systemctl start tomcat"]}
          
    - name: Deploy to EC2 via SSM
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        instance-id: ${{ secrets.INSTANCE_ID }}
        document-name: "AWS-RunShellScript"
        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        
    - name: Run SSM command
      run: |
        aws ssm send-command \
          --document-name "AWS-RunShellScript" \
          --targets "Key=instanceids,Values=${{ secrets.INSTANCE_ID }}" \
          --parameters '{"commands":["sudo systemctl stop tomcat", "sudo rm -rf /opt/tomcat/tomacat-10/webapps/boot.war", "sudo cp boot/target/boot-0.0.1-SNAPSHOT.war.war /opt/tomcat/tomacat-10/webapps/boot.war", "sudo systemctl start tomcat"]}' \
          --timeout-seconds 600
